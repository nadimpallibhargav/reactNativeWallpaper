{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport styles from \"./HomeStyles\";\nimport imgDay from \"../assets/DayMode.jpeg\";\nimport imgNight from \"../assets/NightMode.jpeg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var myTime = new Date();\n  var myHours = myTime.getHours();\n\n  var _useState = useState(myHours >= 6 && myHours < 18 ? imgDay : imgNight),\n      _useState2 = _slicedToArray(_useState, 2),\n      backgroundImage = _useState2[0],\n      SetBackgroundImage = _useState2[1];\n\n  var clickCountry = function clickCountry(country) {\n    var newTime = new Date().toLocaleString('en-US', {\n      timeZone: country,\n      hour: '2-digit',\n      hourCycle: 'h24'\n    });\n\n    if (newTime >= 6 && newTime < 18) {\n      SetBackgroundImage(imgDay);\n    } else {\n      SetBackgroundImage(imgNight);\n    }\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState([{\n    label: 'INDIA',\n    value: 'Asia/Kolkata'\n  }, {\n    label: 'USA',\n    value: 'America/New_York'\n  }, {\n    label: 'UK',\n    value: 'Europe/London'\n  }, {\n    label: 'AUSTRALIA',\n    value: 'Australia/Sydney'\n  }, {\n    label: 'SOUTH AFRICA',\n    value: 'Africa/Johannesburg'\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      items = _useState8[0],\n      setItems = _useState8[1];\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.backgroundView,\n        children: _jsx(Image, {\n          source: backgroundImage,\n          style: styles.bgImage\n        })\n      }), _jsx(ScrollView, {\n        children: _jsx(View, {\n          style: {\n            padding: 20\n          },\n          children: _jsx(DropDownPicker, {\n            style: {\n              marginBottom: 10\n            },\n            open: open,\n            setOpen: setOpen,\n            value: value,\n            placeholder: \"Select Country\",\n            items: items,\n            setValue: setValue,\n            setItems: setItems,\n            onSelectItem: function onSelectItem(item) {\n              clickCountry(item.value);\n            }\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default Home;","map":{"version":3,"names":["React","useState","DropDownPicker","styles","imgDay","imgNight","Home","myTime","Date","myHours","getHours","backgroundImage","SetBackgroundImage","clickCountry","country","newTime","toLocaleString","timeZone","hour","hourCycle","open","setOpen","value","setValue","label","items","setItems","flex","container","backgroundView","bgImage","padding","marginBottom","item"],"sources":["/Volumes/Macintosh HD - Data/learning/react-native-practice/reactNativeWallpaper/app/screens/Home.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, ScrollView, Image, SafeAreaView } from \"react-native\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport styles from \"./HomeStyles\";\nimport imgDay from '../assets/DayMode.jpeg';\nimport imgNight from '../assets/NightMode.jpeg';\n\nconst Home = () => {\n  \n  const myTime =  new Date();\n  const myHours = myTime.getHours();\n  const [backgroundImage, SetBackgroundImage] = useState( myHours >= 6 && myHours < 18 ? imgDay : imgNight );\n  \n  const clickCountry = (country: any) => {    \n\n    const newTime: any = new Date().toLocaleString('en-US',\n                        {timeZone: country,hour: '2-digit',hourCycle:'h24'}\n                    );\n    if( newTime >= 6 && newTime < 18 ) {\n      SetBackgroundImage(imgDay);\n    } else {\n      SetBackgroundImage(imgNight);\n    }\n    \n  }\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(null);\n  const [items, setItems] = useState([\n    {label: 'INDIA', value: 'Asia/Kolkata'},\n    {label: 'USA', value: 'America/New_York'},\n    {label: 'UK', value: 'Europe/London'},\n    {label: 'AUSTRALIA', value: 'Australia/Sydney'},\n    {label: 'SOUTH AFRICA', value: 'Africa/Johannesburg'},\n  ]);\n\n\n\n  return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <View style={styles.container}>\n          <View style={styles.backgroundView}>\n            <Image source={backgroundImage} style={styles.bgImage} />\n          </View>\n          <ScrollView>\n            <View style={{padding: 20}}>        \n              <DropDownPicker\n                style={{marginBottom: 10}}\n                open={open}\n                setOpen={setOpen}\n                value={value}\n                placeholder='Select Country'\n                items={items}              \n                setValue={setValue}\n                setItems={setItems}\n                onSelectItem={(item) => {\n                  clickCountry(item.value);\n                }}\n              />       \n            </View>\n          </ScrollView>\n        </View>\n      </SafeAreaView>      \n    );\n}\n\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;EAEjB,IAAMC,MAAM,GAAI,IAAIC,IAAJ,EAAhB;EACA,IAAMC,OAAO,GAAGF,MAAM,CAACG,QAAP,EAAhB;;EACA,gBAA8CT,QAAQ,CAAEQ,OAAO,IAAI,CAAX,IAAgBA,OAAO,GAAG,EAA1B,GAA+BL,MAA/B,GAAwCC,QAA1C,CAAtD;EAAA;EAAA,IAAOM,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAkB;IAErC,IAAMC,OAAY,GAAG,IAAIP,IAAJ,GAAWQ,cAAX,CAA0B,OAA1B,EACD;MAACC,QAAQ,EAAEH,OAAX;MAAmBI,IAAI,EAAE,SAAzB;MAAmCC,SAAS,EAAC;IAA7C,CADC,CAArB;;IAGA,IAAIJ,OAAO,IAAI,CAAX,IAAgBA,OAAO,GAAG,EAA9B,EAAmC;MACjCH,kBAAkB,CAACR,MAAD,CAAlB;IACD,CAFD,MAEO;MACLQ,kBAAkB,CAACP,QAAD,CAAlB;IACD;EAEF,CAXD;;EAaA,iBAAwBJ,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOmB,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA0BpB,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOqB,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA0BtB,QAAQ,CAAC,CACjC;IAACuB,KAAK,EAAE,OAAR;IAAiBF,KAAK,EAAE;EAAxB,CADiC,EAEjC;IAACE,KAAK,EAAE,KAAR;IAAeF,KAAK,EAAE;EAAtB,CAFiC,EAGjC;IAACE,KAAK,EAAE,IAAR;IAAcF,KAAK,EAAE;EAArB,CAHiC,EAIjC;IAACE,KAAK,EAAE,WAAR;IAAqBF,KAAK,EAAE;EAA5B,CAJiC,EAKjC;IAACE,KAAK,EAAE,cAAR;IAAwBF,KAAK,EAAE;EAA/B,CALiC,CAAD,CAAlC;EAAA;EAAA,IAAOG,KAAP;EAAA,IAAcC,QAAd;;EAUA,OACI,KAAC,YAAD;IAAc,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAR,CAArB;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAExB,MAAM,CAACyB,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEzB,MAAM,CAAC0B,cAApB;QAAA,UACE,KAAC,KAAD;UAAO,MAAM,EAAElB,eAAf;UAAgC,KAAK,EAAER,MAAM,CAAC2B;QAA9C;MADF,EADF,EAIE,KAAC,UAAD;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE;YAACC,OAAO,EAAE;UAAV,CAAb;UAAA,UACE,KAAC,cAAD;YACE,KAAK,EAAE;cAACC,YAAY,EAAE;YAAf,CADT;YAEE,IAAI,EAAEZ,IAFR;YAGE,OAAO,EAAEC,OAHX;YAIE,KAAK,EAAEC,KAJT;YAKE,WAAW,EAAC,gBALd;YAME,KAAK,EAAEG,KANT;YAOE,QAAQ,EAAEF,QAPZ;YAQE,QAAQ,EAAEG,QARZ;YASE,YAAY,EAAE,sBAACO,IAAD,EAAU;cACtBpB,YAAY,CAACoB,IAAI,CAACX,KAAN,CAAZ;YACD;UAXH;QADF;MADF,EAJF;IAAA;EADF,EADJ;AA0BD,CAzDD;;AA2DA,eAAehB,IAAf"},"metadata":{},"sourceType":"module"}